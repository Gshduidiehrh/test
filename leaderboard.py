import json
import glob
import os

def generate_leaderboard():
    print("–ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤...")
    results = []
    result_files = glob.glob("results/**/*.json", recursive=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏: {len(result_files)}")
    
    for file in result_files:
        try:
            print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {file}")
            with open(file) as f:
                data = json.load(f)
                
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—É—Ç–∏
            username = os.path.basename(os.path.dirname(file))
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π
            if 'generation_time' not in data or 'sorting_time' not in data:
                print(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è –≤ {file}: {data}")
                continue
                
            total = data['generation_time'] + data['sorting_time']
            results.append({
                "user": username,
                "generation": data["generation_time"],
                "sorting": data["sorting_time"],
                "total": total
            })
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {username} - {total:.2f} –º—Å")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {file}: {str(e)}")
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ª—É—á—à–µ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    results.sort(key=lambda x: x["total"])
    print(f"–í—Å–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã
    md = "# üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤\n\n"
    
    if not results:
        md += "–ü–æ–∫–∞ –Ω–∏–∫–∞–∫–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!\n"
        print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤")
        return md
    
    md += "| –ú–µ—Å—Ç–æ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å | –ì–µ–Ω–µ—Ä–∞—Ü–∏—è (–º—Å) | –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ (–º—Å) | –í—Å–µ–≥–æ (–º—Å) |\n"
    md += "|-------|-------------|----------------|-----------------|------------|\n"
    
    for i, res in enumerate(results[:10]):
        md += f"| {i+1} | {res['user']} | {res['generation']:.2f} | {res['sorting']:.2f} | **{res['total']:.2f}** |\n"
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞")
    return md

if __name__ == "__main__":
    leaderboard = generate_leaderboard()
    with open("LEADERBOARD.md", "w") as f:
        f.write(leaderboard)
