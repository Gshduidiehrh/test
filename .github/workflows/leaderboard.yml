name: Update Leaderboard

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-leaderboard:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download benchmark artifacts
      uses: actions/download-artifact@v4
      with:
        path: benchmark-artifacts
        pattern: 'benchmark-outputs-*'
        merge-multiple: true
        
    - name: Prepare results (debug output)
      run: |
        mkdir -p results
        echo "Artifacts structure:"
        find benchmark-artifacts -type f | sort
        echo ""
        
        # Process each artifact
        for artifact_dir in benchmark-artifacts/*; do
          if [ -d "$artifact_dir" ]; then
            echo "Processing artifact: $artifact_dir"
            user_file="$artifact_dir/user.txt"
            result_file="$artifact_dir/result.json"
            
            if [ -f "$user_file" ] && [ -f "$result_file" ]; then
              user=$(cat "$user_file")
              echo "Found user: $user"
              mkdir -p "results/$user"
              cp "$result_file" "results/$user/result.json"
              echo "Copied result for $user"
            else
              echo "Missing files in $artifact_dir:"
              [ -f "$user_file" ] || echo "  user.txt missing"
              [ -f "$result_file" ] || echo "  result.json missing"
            fi
          fi
        done
        
        echo ""
        echo "Results directory content:"
        find results -type f | sort
        
    - name: Generate leaderboard
      run: |
        python3 leaderboard.py
        cat LEADERBOARD.md
        
    - name: Commit and push
      run: |
        git config user.name "github-actions"
        git config user.email "actions@users.noreply.github.com"
        git add LEADERBOARD.md
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "ðŸ“Š ÐžÐ±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ðµ Ñ‚Ð°Ð±Ð»Ð¸Ñ†Ñ‹ Ð»Ð¸Ð´ÐµÑ€Ð¾Ð²"
          git push
        else
          echo "No changes to commit"
        fi
